<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">

	<on-start>
		<evaluate expression="orderController.initializeForm()" result="flowScope.orderForm" />
	</on-start>

	<view-state id="selectPizzas" view="selectPizzas" model="orderForm" >
		<transition on="add" to="selectPizzas" bind="true">
			<evaluate expression="orderController.addPizza(flowScope.orderForm)" />
		</transition>
		
		<transition on="next" to="selectShop" />
		
		<transition on="reset" to="selectPizzas">
			<evaluate expression="orderController.initializeForm()" result="flowScope.orderForm" />
		</transition>
		
		<transition on="return" to="end" />
	</view-state>

	<view-state id="selectShop" view="selectShop" model="orderForm">
		<transition on="next" to="selectDeliveryOptions" bind="true"/>
		
		<transition on="previous" to="selectPizzas" />
	</view-state>
	
	<view-state id="selectDeliveryOptions" view="selectDeliveryOptions" model="orderForm">
		<transition on="finish" to="loginCheck" bind="true"/>
			
		<transition on="previous" to="selectShop" />
	</view-state>
	
	<decision-state id="loginCheck">
		<if test="externalContext.sessionMap.contains('authenticatedCustomer') == true" then="createOrder" else="authenticate"/>
	</decision-state>	

	<view-state id="authenticate" view="login" model="authenticationForm">
		<on-entry>
			<evaluate expression="authenticationController.initializeForm()" result="flowScope.authenticationForm" />
		</on-entry>
		<transition on="authenticate" to="createOrder" bind="true">
			<evaluate expression="authenticationController.authenticate(flowScope.authenticationForm, externalContext, messageContext)"/>
		</transition>

		<transition on="previous" to="selectDeliveryOptions"/>
	</view-state>
	
	<action-state id="createOrder">
		<evaluate expression="orderController.placeOrder(externalContext.sessionMap.get('authenticatedCustomer'), flowScope.orderForm)" result="flowScope.orderId"/>
		<transition on="success" to="end"/>
	</action-state>

	<end-state id="end" view="redirect:/ordersOverview.html?orderOk=true&amp;orderId={orderId}"/>
</flow>	
	