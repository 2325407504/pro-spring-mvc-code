<flow xmlns="http://www.springframework.org/schema/webflow"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/webflow
                          http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">
                          
	<on-start>
		<evaluate expression="orderController.initializeForm()" result="flowScope.orderForm" />
	</on-start>

	<view-state id="selectCategory" view="selectCategory" model="orderForm">
		<transition on="next" to="selectBooks"/>
		
		<transition on="return" to="endOrderCanceled" />
	</view-state>
	
	<view-state id="selectBooks" view="selectBooks" model="orderForm" >
		<transition on="add" >
			<evaluate expression="orderController.addBook(flowScope.orderForm)" />
			<render fragments="selectedBooks"/>
		</transition>
		
		<transition on="next" to="selectDeliveryOptions" />
		
		<transition on="reset" to="selectBooks">
			<evaluate expression="orderController.initializeForm()" result="flowScope.orderForm" />
		</transition>

		<transition on="previous" to="selectCategory" />
		
	</view-state>
	
	<view-state id="selectDeliveryOptions" view="selectDeliveryOptions" model="orderForm">
		<transition on="finish" to="loginCheck" bind="true"/>
			
		<transition on="previous" to="selectBooks" />
		
		<transition on="return" to="endOrderCanceled" />
	</view-state>
	
	<decision-state id="loginCheck">
		<if test="externalContext.sessionMap.contains('authenticatedCustomer') == true" then="createOrder" else="authenticate"/>
	</decision-state>	

	<subflow-state id="authenticate" subflow="authentication-flow">
		<transition on="authenticationOk" to="createOrder"/>
		<transition on="previous" to="selectDeliveryOptions"/>
	</subflow-state>
	
	<subflow-state id="createOrder" subflow="create-order-flow">
		<input name="customer" value="externalContext.sessionMap.get('authenticatedCustomer')"/>
		<input name="orderForm"/>
		
		<output name="orderId"/>
		
		<transition on="endOrderOk" to="endOrderOk"/>
	</subflow-state>

	<end-state id="endOrderCanceled" view="redirect:/index.jspx"/>
	<end-state id="endOrderOk" view="redirect:/ordersOverview.html?orderOk=true&amp;orderId={orderId}"/>

</flow>	
	